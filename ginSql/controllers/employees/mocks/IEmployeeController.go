// Code generated by mockery v2.18.0. DO NOT EDIT.

package mocks

import (
	models "github.com/golangLearning/ginSQL/controllers/employees/models"
	mock "github.com/stretchr/testify/mock"
)

// IEmployeeController is an autogenerated mock type for the IEmployeeController type
type IEmployeeController struct {
	mock.Mock
}

// GetEmployeesList provides a mock function with given fields:
func (_m *IEmployeeController) GetEmployeesList() ([]models.Employee, error) {
	ret := _m.Called()

	var r0 []models.Employee
	if rf, ok := ret.Get(0).(func() []models.Employee); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Employee)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIEmployeeController interface {
	mock.TestingT
	Cleanup(func())
}

// NewIEmployeeController creates a new instance of IEmployeeController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIEmployeeController(t mockConstructorTestingTNewIEmployeeController) *IEmployeeController {
	mock := &IEmployeeController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
